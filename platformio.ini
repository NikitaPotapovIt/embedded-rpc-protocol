; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

;===========================================================
; Environment: STM32 Nucleo-F411RE Development Board
;===========================================================
[env:nucleo_f411re]
; Платформа: STM32 (STMicroelectronics)
platform = ststm32

; Плата: STM32 Nucleo-F411RE
; Особенности: Cortex-M4, 100MHz, 512KB Flash, 128KB RAM, Arduino-совместимые headers
board = nucleo_f411re

; Фреймворк: STM32Cube HAL + CMSIS
; Предоставляет HAL библиотеки и низкоуровневые драйверы ST
framework = stm32cube

;===========================================================
; Linker Flags - Настройки линковщика
;===========================================================
board_build.link_flags =
    --specs=nosys.specs      ; Минимальная системная библиотека (без POSIX)
    --specs=nano.specs       ; Уменьшенная версия libc (экономия памяти)
    --specs=nosys.specs      ; Повторно для надежности

;===========================================================
; Build Flags - Флаги компиляции и ассемблера
;===========================================================
build_flags =
    ; Определения препроцессора
    -DUSE_HAL_DRIVER         ; Использовать HAL драйверы STM32
    -DSTM32F411xE            ; Целевой микроконтроллер: STM32F411xE series
    
    ; Настройки компилятора C++
    -std=c++17               ; Стандарт C++17 (максимально поддерживаемый для Cortex-M)
    
    ; Архитектурные флаги
    -mcpu=cortex-m4          ; Целевой процессор: ARM Cortex-M4
    -mthumb                  ; Генерировать Thumb-2 инструкции
    -mfpu=fpv4-sp-d16        ; FPU: Single-precision VFPv4 (16 регистров)
    -mfloat-abi=hard         ; ABI с аппаратной поддержкой浮点运算
    
    ; Пути включения заголовочных файлов
    -I$PROJECT_DIR/include   ; Пользовательские заголовки проекта
    -I$PROJECT_DIR/lib/FreeRTOS/include  ; Заголовки FreeRTOS
    -I$PROJECT_DIR/lib/FreeRTOS/portable/GCC/ARM_CM4F  ; Порт FreeRTOS для Cortex-M4F

;===========================================================
; Build Unflags - Отключение нежелательных флагов
;===========================================================
build_unflags =
    -mfloat-abi=soft         ; Отключить software floating point
    -mfloat-abi=softfp       ; Отключить soft-float ABI
    -mfloat-abi=hard         ; Отключить (дублирование) hardware float ABI
    -mfpu=*                  ; Отключить все FPU флаги (заменяются выше)

;===========================================================
; Library Configuration - Настройки библиотек
;===========================================================
lib_extra_dirs = $PROJECT_DIR/lib  ; Дополнительные пути поиска библиотек
lib_archive = no                   ; Не создавать архив библиотек (использовать исходники)

;===========================================================
; Upload Configuration - Настройки загрузки (опционально)
;===========================================================
; upload_protocol = stlink     ; Протокол загрузки: ST-Link (по умолчанию)
; upload_port = /dev/ttyACM0   ; Порт для загрузки (для других программаторов)
; upload_speed = 115200        ; Скорость загрузки

;===========================================================
; Monitoring Configuration - Настройки мониторинга (опционально)
;===========================================================
; monitor_port = /dev/ttyACM0  ; Порт для мониторинга Serial
; monitor_speed = 115200       ; Скорость UART для мониторинга

;===========================================================
; Advanced Options - Расширенные настройки (опционально)
;===========================================================
; debug_tool = stlink          ; Инструмент отладки: ST-Link
; debug_init_break = tbreak main ; Остановка при входе в main
